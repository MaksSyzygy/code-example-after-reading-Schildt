using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data.SqlClient;
using System.Data.Common;
using System.Data;

namespace ADO
{
    class PeopleData
    {
        public string Name;
        public string Surname;
        public int Age;
        public int Salary;
        public string Gender;
        public string Language;
        public string LangLevel;

        public PeopleData(string name, string surname, int age, int salary, string gender, string language, string langLevel)
        {
            Name = name;
            Surname = surname;
            Age = age;
            Salary = salary;
            Gender = gender;
            Language = language;
            LangLevel = langLevel;
        }

        public string Intro() { return $"Имя - {Name}\nФамилия - {Surname}\nВозраст - {Age}\nЗарплата - {Salary}\nПол - {Gender}\nЯзык - {Language}\nУровень владения - {LangLevel}"; }
    }

    class Person
    {
        public List<PeopleData> Peoples()
        {
            PeopleData people1 = new PeopleData("Иван", "Иванов", 33, 6000, "мужской", "английский", "pre-intermediate");
            PeopleData people2 = new PeopleData("Елена", "Петрова", 43, 8000, "женский", "английский", "advanced");
            PeopleData people3 = new PeopleData("Евгений", "Сидоров", 30, 10000, "мужской", "английский", "upper-intermediate");
            PeopleData people4 = new PeopleData("Ольга", "Соловьева", 34, 7600, "женский", "английский", "elementary");
            PeopleData people5 = new PeopleData("Михаил", "Михайлов", 29, 14000, "мужской", "французкий", "advanced");
            PeopleData people6 = new PeopleData("Ярослав", "Орлов", 25, 15000, "мужской", "французкий", "advanced");
            PeopleData people7 = new PeopleData("Борис", "Степанов", 53, 12000, "мужской", "немецкий", "pre-intermediate");
            PeopleData people8 = new PeopleData("Юрий", "Бойко", 32, 22000, "мужской", "немецкий", "advanced");
            PeopleData people9 = new PeopleData("Юлия", "Ковалева", 33, 12000, "женский", "испанский", "upper-intermediate");
            PeopleData people10 = new PeopleData("Светлана", "Соловьева", 42, 9000, "женский", "итальянский", "pre-intermediate");

            return new List<PeopleData> { people1, people2, people3, people4, people5, people6, people7, people8, people9, people10 };
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Person person = new Person();
            List<PeopleData> peoples = new List<PeopleData>();
            peoples.AddRange(person.Peoples());//запихиваем списки в List

            while (true)
            {
                Console.WriteLine("Сотрудники компании владеют следующими языками:\n");

                var langlist = from lang in peoples//сортируем языки
                               select lang.Language;

                foreach (var val in langlist.Distinct())//Distinct - убираем повторяющеися значения
                {
                    string emp = " сотрудника";
                    if (langlist.Where(x => x == val).Count() == 1)
                    {
                        emp = " сотрудник";
                    }
                    Console.WriteLine(val + " - " + langlist.Where(x => x == val).Count() + emp);//выводим количество сотрудников
                }

                Console.Write("\nВыбор языка - ");

                string query = Console.ReadLine();

                var Language = from lang in peoples//сортируем их по владению языком
                               where lang.Language == query//выбираем интересующий язык
                               select lang;

                Dictionary<string, IEnumerable<PeopleData>> peopleLang = new Dictionary<string, IEnumerable<PeopleData>>();//создаем словарь
                peopleLang.Add(query, Language);//присваиваем значению отсортированный список

                if (peopleLang.TryGetValue(query, out Language))
                {
                    foreach (var sort in Language)
                    {
                        Console.WriteLine(sort.Intro());
                        Console.WriteLine(new string('-', 30));
                    }
                }
                break;
            }
        }
    }
}